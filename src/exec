exitnetup () {
        echo -e ""
        check_good "$NETUPCRED1"
        check_good "$NETUPCRED2"
        echo -e ""
        exit 0
}

do_run() {
	SELECTED=$1
        if [ -z "$1" ]; then
                echo -e "No Module input given."
                exit 0
        else
                FILE=$1
                runmodcommand
                exitnetup
        fi
}

do_update() {
	if [ "$1" = "-y" ]; then
		fastupdategithub
	else
		updategithub
		exitnetup
	fi
}

do_autoexit() {
        if [ "$1" = "off" ] ||  [ "$1" = "OFF" ] || [ "$1" = "" ]; then
                if grep -q "$AUTOEXITOFF" "$HOME/netup/netup"
                        then
			echo -e ""
                        print_notification "Automatic Exit is already disabled."
                else
			echo -e ""
			sed -i "s/$AUTOEXITON/$AUTOEXITOFF/g" "$HOME/netup/netup"
                        check_good "Changed Automatic Exit of Script to OFF."
                fi
                elif [ "$1" = "on" ] ||  [ "$1" = "ON" ]; then
                        if grep -q "$AUTOEXITON" "$HOME/netup/netup"
                        then
			echo -e "";
                        print_notification "Automatic Exit is already enabled."
                else
			echo -e ""
			sed -i "s/$AUTOEXITOFF/$AUTOEXITON/g" "$HOME/netup/netup"
                        check_good "Changed Automatic Exit of Script to ON."
                fi
                else
        exit 0
        fi
        exitnetup
}

do_autoreboot() {
        if [ "$1" = "off" ] ||  [ "$1" = "OFF" ] || [ "$1" = "" ]; then
		if grep -q "$AUTOBOOTOFF" "$HOME/netup/netup"
			then
			echo -e ""
    			print_notification "Automatic Reboot is already disabled."
		else
			echo -e ""
			sed -i "s/$AUTOBOOTON/$AUTOBOOTOFF/g" "$HOME/netup/netup"
			check_good "Changed Automatic Reboot after Script Completes to OFF."
		fi
                elif [ "$1" = "on" ] ||  [ "$1" = "ON" ]; then
			if grep -q "$AUTOBOOTON" "$HOME/netup/netup"
                        then
			echo -e ""
			print_notification "Automatic Reboot is already enabled."
		else
			echo -e ""
			sed -i "s/$AUTOBOOTOFF/$AUTOBOOTON/g" "$HOME/netup/netup"
			check_good "Changed Automatic Reboot after Script Completes to ON."
		fi
                else
        exit 0
        fi
        exitnetup
}

do_updatemods() {
	updatemods
	exitnetup
}

do_autostart() {
        if [ "$1" = "off" ] ||  [ "$1" = "OFF" ] || [ "$1" = "" ]; then
		disable_cron
	elif [ "$1" = "on" ] ||  [ "$1" = "ON" ]; then
		install_cron;
	else
		really;
        	exit 0
	fi
        exitnetup
}

do_interface() {
	if [ "$1" = "auto" ] || [ "$1" = "" ]; then
		AUTO1=$(ip link | grep "state UP" | awk -F: '$0!~"lo|vir|^[^0-9]"{print $2;getline}')
		AUTODETECT=${AUTO1## }
		echo -e "";
		print_notification "Automatticially detecting active Adapter.";
		print_notification "Setting $INTVAR Variable to $AUTODETECT";
		sed -i "s/$INTVAR=.*/$INTVAR=$AUTODETECT/g" "$HOME/netup/netup";
		check_good "Done."
		exitnetup;
	fi
}

do_enablemod() {
	if [ -z "$1" ]; then
                print_error "No Module input given."
                exit 0
        else
		SELECTED=$1
                print_notification "Attempting to Enable Module: $SELECTED."
		if [ -f $DIR/modules/$SELECTED.tmp ]; then
			print_notification "Checking if Module was Enabled."
			/bin/bash $DIR/modules/enablemod -f $DIR/modules/$SELECTED
			if [ -f "$DIR/modules/$SELECTED.mdu" ]; then
				check_good "Module $SELECTED Enabled!"
			else
				print_error "Module $SELECTED was not Enabled please contact contact@private-locker.com";
			fi
			exitnetup
		else
			print_error "There is No Module named that, Please Try again."
                	exitnetup
		fi
        fi
}

do_disablemod() {
        if [ -z "$1" ]; then
                print_error "No Module input given."
                exit 0
        else
		SELECTED=$1
		print_notification "Attempting to Disable Module: $SELECTED"
		if [ -f $DIR/modules/$SELECTED.mdu ]; then
			print_notification "Checking if Module was Disabled."
			/bin/bash $DIR/modules/disablemod -f $DIR/modules/$SELECTED
			if [ -f "$DIR/modules/$SELECTED.tmp" ]; then
				check_good "Module $SELECTED Disabled!"
			else
				print_error "Module $SELECTED was not Disabled please contact contact@private-locker.com";
			fi
			exitnetup
		else
			print_error "There is No Module named that, Please Try again."
                	exitnetup
		fi
        fi
}

do_disablemods() {
	for file in `ls $DIR/modules/*.mdu`; do
		print_notification "Disabling $file."
		mv "$file" "$DIR/modules/$(basename "$file" .mdu).tmp"
	done
}

do_enablemods() {
	for file in `ls $DIR/modules/*.tmp`; do
		print_notification "Enabling $file."
		mv "$file" "$DIR/modules/$(basename "$file" .tmp).mdu"
	done
}

do_usage() {
	case "$1" in
		update)
			shift
			do_update $@ ;;
		updatemods)
			shift
			do_updatemods $@ ;;
		run)
			shift
			do_run $@ ;;
		enable|enablemod)
			shift
			do_enablemod $@ ;;
		enablemods)
			shift
			do_enablemods $@ ;;
		autostart)
			shift
			do_autostart $@ ;;
		autoreboot)
			shift
			do_autoreboot $@ ;;
		list|listmods)
			list_modules # init.sh
			exitnetup ;;
		disablemods)
			shift
			do_disablemods $@ ;;
		disable|disablemod)
			shift
			do_disablemod $@ ;;
		autoexit)
			shift
			do_autoexit $@ ;;
		interface)
			shift
			do_interface $@ ;;
		help)
			do_help ;;
		*)
			if [ -z "$1" ]
  			then
    				do_init
			else
				nocommands
			fi
			 ;;
	esac
}


exitnetup () {
        echo -e ""
        check_good "$NETUPCRED1";
        check_good "$NETUPCRED2";
        echo -e ""
        exit 0
}

SELECTED=$2
if [[ $1 = "run" ]]; then
        if [ -z "$2" ]; then
                echo -e "No Module input given."
                exit 0
        else
                FILE=$2
                runmodcommand;
                exitnetup;
        fi
elif [[ $1 = "update" ]]; then
		if [ "$2" = "-y" ]; then
			fastupdategithub;
		else
        updategithub;
        exitnetup;
		fi
elif [[ $1 = "autoexit" ]]; then
        if [ "$2" = "off" ] ||  [ "$2" = "OFF" ] || [ "$2" = "" ]; then
                if grep -q "$AUTOEXITOFF" "$HOME/netup/netup";
                        then
			echo -e "";
                        print_notification "Automatic Exit is already disabled.";
                else
			echo -e "";
			sed -i "s/$AUTOEXITON/$AUTOEXITOFF/g" "$HOME/netup/netup"
                        check_good "Changed Automatic Exit of Script to OFF.";
                fi
                elif [ "$2" = "on" ] ||  [ "$2" = "ON" ]; then
                        if grep -q "$AUTOEXITON" "$HOME/netup/netup";
                        then
			echo -e "";
                        print_notification "Automatic Exit is already enabled.";
                else
			echo -e "";
			sed -i "s/$AUTOEXITOFF/$AUTOEXITON/g" "$HOME/netup/netup"
                        check_good "Changed Automatic Exit of Script to ON.";
                fi
                else
        exit 0
        fi
        exitnetup;
elif [[ $1 = "autoreboot" ]]; then
        if [ "$2" = "off" ] ||  [ "$2" = "OFF" ] || [ "$2" = "" ]; then
		if grep -q "$AUTOBOOTOFF" "$HOME/netup/netup";
			then
			echo -e "";
    			print_notification "Automatic Reboot is already disabled.";
		else
			echo -e "";
			sed -i "s/$AUTOBOOTON/$AUTOBOOTOFF/g" "$HOME/netup/netup"
			check_good "Changed Automatic Reboot after Script Completes to OFF.";
		fi
                elif [ "$2" = "on" ] ||  [ "$2" = "ON" ]; then
			if grep -q "$AUTOBOOTON" "$HOME/netup/netup";
                        then
			echo -e "";
			print_notification "Automatic Reboot is already enabled.";
		else
			echo -e "";
			sed -i "s/$AUTOBOOTOFF/$AUTOBOOTON/g" "$HOME/netup/netup"
			check_good "Changed Automatic Reboot after Script Completes to ON.";
		fi
                else
        exit 0
        fi
        exitnetup;
elif [[ $1 = "updatemods" ]]; then
        updatemods;
        exitnetup;
elif [[ $1 = "autostart" ]]; then
        if [ "$2" = "off" ] ||  [ "$2" = "OFF" ] || [ "$2" = "" ]; then
			disable_cron;
		elif [ "$2" = "on" ] ||  [ "$2" = "ON" ]; then
			install_cron;
		else
			really;
        exit 0
	fi
        exitnetup;
elif [[ $1 = "listmods" ]]; then
        list_modules;
        exitnetup;
elif [[ $1 = "list" ]]; then
        list_modules;
        exitnetup;

elif [[ $1 = "enablemod" ]]; then
        if [ -z "$2" ]; then
                echo -e "No Module input given."
                exit 0
        else
                echo -e "Attempting to enable $SELECTED"
				if [ -f $DIR/modules/$SELECTED.tmp ]; then
					/bin/bash $DIR/modules/enablemod -f $DIR/modules/$SELECTED
				else
					echo "There is No Module named that, Please Try again."
                exitnetup;
				fi
        fi
elif [[ $1 = "interface" ]]; then
	if [ "$2" = "auto" ] || [ "$2" = "" ]; then
		AUTO1=$(ip link | grep "state UP" | awk -F: '$0!~"lo|vir|^[^0-9]"{print $2;getline}')
		AUTODETECT=${AUTO1## }
		echo -e "";
		print_notification "Automatticially detecting active Adapter.";
		print_notification "Setting $INTVAR Variable to $AUTODETECT";
		sed -i "s/$INTVAR=.*/$INTVAR=$AUTODETECT/g" "$HOME/netup/netup";
		check_good "Done."
	exitnetup;
	fi
elif [[ $1 = "enable" ]]; then
        if [ -z "$2" ]; then
                echo -e "No Module input given."
                exit 0
        else
                echo -e "Attempting to enable $SELECTED"
				if [ -f $DIR/modules/$SELECTED.tmp ]; then
					/bin/bash $DIR/modules/enablemod -f $DIR/modules/$SELECTED
				else
					echo "There is No Module named that, Please Try again."
                exitnetup;
				fi
        fi
elif [[ $1 = "disablemod" ]]; then
        if [ -z "$2" ]; then
                echo -e "No Module input given."
                exit 0
        else
                echo -e "Attempting to disable $SELECTED"
				if [ -f $DIR/modules/$SELECTED.mdu ]; then
					/bin/bash $DIR/modules/disablemod -f $DIR/modules/$SELECTED
				else
					echo "There is No Module named that, Please Try again."
                exitnetup;
				fi
        fi
elif [[ $1 = "disable" ]]; then
        if [ -z "$2" ]; then
                echo -e "No Module input given."
                exit 0
        else
                echo -e "Attempting to disable $SELECTED"
				if [ -f $DIR/modules/$SELECTED.mdu ]; then
					/bin/bash $DIR/modules/disablemod -f $DIR/modules/$SELECTED
				else
					echo "There is No Module named that, Please Try again."
                exitnetup;
				fi
        fi
fi
